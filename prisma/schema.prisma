// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Korisnik {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  ime       String
  password  String?
  artikli   Artikal[]
  korpe     Korpa[]   // Dodaj vezu: jedan korisnik može imati više korpi
  createdAt DateTime  @default(now())
}

model Artikal {
  id         Int       @id @default(autoincrement())
  naziv      String
  opis       String?
  korisnikId Int
  korisnik   Korisnik  @relation(fields: [korisnikId], references: [id])
  korpa     Korpa[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Korpa {
  id        Int       @id @default(autoincrement())
  korisnikId Int
  artikalId  Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  korisnik   Korisnik  @relation(fields: [korisnikId], references: [id])
  artikal    Artikal?  @relation(fields: [artikalId], references: [id])
  @@ unique([korisnikId, artikalId]) // kompozitni ključ = više kolona koje zajedno formiraju jedinstven identifikator reda, sprečava duplikate
}

model Account {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  balance Float   @default(0) // saldo na računu može biti decimalan broj
}
